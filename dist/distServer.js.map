{"version":3,"sources":["webpack:///webpack/bootstrap 926c1c7c8d0eaba8911e?9d98","webpack:///./bin/distServer.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA,4BAA2B,iBAAiB;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,IAAG;AACH,6CAA4C,KAAK;AACjD,8BAA6B,KAAK;AAClC;AACA,EAAC","file":"distServer.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 926c1c7c8d0eaba8911e\n **/","import express from 'express';\nimport path from 'path';\nimport open from 'open';\nimport parser from 'body-parser';\nimport compression from 'compression';\nimport userRoute from '../server/routes/users.routes';\nimport roleRoute from '../server/routes/roles.routes';\nimport documentRoute from '../server/routes/documents.routes';\nimport searchRoute from '../server/routes/search.routes';\nimport paginationRoute from '../server/routes/pagination.routes';\n\n// import app from '../server';\n\n\n/* eslint-disable no-console */\n\nconst port = 5000;\nconst app = express();\napp.use(parser.urlencoded({ extended: true }));\napp.use(parser.json());\napp.use(compression());\napp.use(express.static('dist'));\n\napp.use('/users', userRoute);\napp.use('/roles', roleRoute);\napp.use('/documents', documentRoute);\napp.use('/search', searchRoute);\napp.use('/pagination', paginationRoute);\n\napp.get('/*', function (req, res) {\n  res.sendFile(path.join(__dirname, '../dist/index.html'));\n});\n\napp.listen(port, function (err) {\n  if (err) {\n    console.log(err);\n  } else {\n    console.log(`Server listening on port ${port}`);\n    open(`http://localhost:${port}`);\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./bin/distServer.js\n ** module id = 0\n ** module chunks = 1\n **/"],"sourceRoot":""}